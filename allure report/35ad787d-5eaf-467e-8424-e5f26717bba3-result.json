{"name": "test_CredKart_Login_008", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_file_002.Test_Credence_002 object at 0x0000022C2AE2A190>\n\n    def test_CredKart_Login_008(self):\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        # Go to Url\n        driver.get(\"https://automation.credence.in/login\")\n        driver.find_element(By.XPATH, \"//input[@name='email']\").send_keys(\"Credencetest@test.com\")\n        driver.find_element(By.CSS_SELECTOR, \"input[id='password']\").send_keys(\"Credence@1234\")\n        driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n        try:\n>           driver.find_element(By.XPATH, \"//h2[normalize-space()='CredKart']\")\n\ntest_file_002.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022C2AE3A290>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7C3D84C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF9ACB7614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFF9C0826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h2[normalize-space()='CredKart']\"}\nE         (Session info: chrome=115.0.5790.111); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF7C3E14A62+57106]\nE       \t(No symbol) [0x00007FF7C3D8CF52]\nE       \t(No symbol) [0x00007FF7C3C5E2CB]\nE       \t(No symbol) [0x00007FF7C3C9786E]\nE       \t(No symbol) [0x00007FF7C3C9795C]\nE       \t(No symbol) [0x00007FF7C3CD0477]\nE       \t(No symbol) [0x00007FF7C3CB69FF]\nE       \t(No symbol) [0x00007FF7C3CCE522]\nE       \t(No symbol) [0x00007FF7C3CB6793]\nE       \t(No symbol) [0x00007FF7C3C8CE81]\nE       \t(No symbol) [0x00007FF7C3C8E064]\nE       \tGetHandleVerifier [0x00007FF7C40C4222+2873042]\nE       \tGetHandleVerifier [0x00007FF7C4116590+3209792]\nE       \tGetHandleVerifier [0x00007FF7C410F3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF7C3EA5F25+652245]\nE       \t(No symbol) [0x00007FF7C3D98618]\nE       \t(No symbol) [0x00007FF7C3D947C4]\nE       \t(No symbol) [0x00007FF7C3D948BC]\nE       \t(No symbol) [0x00007FF7C3D84C33]\nE       \tBaseThreadInitThunk [0x00007FFF9ACB7614+20]\nE       \tRtlUserThreadStart [0x00007FFF9C0826B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_file_002.Test_Credence_002 object at 0x0000022C2AE2A190>\n\n    def test_CredKart_Login_008(self):\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        # Go to Url\n        driver.get(\"https://automation.credence.in/login\")\n        driver.find_element(By.XPATH, \"//input[@name='email']\").send_keys(\"Credencetest@test.com\")\n        driver.find_element(By.CSS_SELECTOR, \"input[id='password']\").send_keys(\"Credence@1234\")\n        driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n        try:\n            driver.find_element(By.XPATH, \"//h2[normalize-space()='CredKart']\")\n            print(\"Login TestCase is Passed\")\n            driver.close()\n            assert True\n        except:\n            print(\"Login TestCase is Failed\")\n            driver.close()\n>           assert False\nE           assert False\n\ntest_file_002.py:23: AssertionError"}, "attachments": [{"name": "stdout", "source": "ab620782-861a-4eb6-95d3-91f26dfcd253-attachment.txt", "type": "text/plain"}], "start": 1691114327943, "stop": 1691114336240, "uuid": "b5cbd622-11e1-48d2-8cdc-32f65f0993af", "historyId": "e08e9cfb8762e5a63a7722f01cc4d3ff", "testCaseId": "e08e9cfb8762e5a63a7722f01cc4d3ff", "fullName": "test_file_002.Test_Credence_002#test_CredKart_Login_008", "labels": [{"name": "suite", "value": "test_file_002"}, {"name": "subSuite", "value": "Test_Credence_002"}, {"name": "host", "value": "DESKTOP-OF7DL4S"}, {"name": "thread", "value": "14320-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file_002"}]}